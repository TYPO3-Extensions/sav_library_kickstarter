<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<T3locallang>
	<meta type="array">
		<type>CSH</type>
		<csh_table></csh_table>
		<description>Help for the queries</description>
	</meta>
	<data type="array">
		<languageKey index="default" type="array">
			<label index=".alttitle">SAV Library Kickstarter &gt; Queries</label>
			<label index=".description">This section is used to specify the query associated with your form.</label>		
			
			<label index="LLL:EXT:sav_library_kickstarter/Resources/Private/Language/locallang.xml:kickstarter.queriesItem.title.description">Sets the name of your query.</label>
			
			<label index="LLL:EXT:sav_library_kickstarter/Resources/Private/Language/locallang.xml:kickstarter.queriesItem.mainTable.description">Sets the main table that your extension will use. By default, it is the first table in your "New Database Tables" section.</label>

			<label index="LLL:EXT:sav_library_kickstarter/Resources/Private/Language/locallang.xml:kickstarter.queriesItem.foreignTables.description">Define here the foreign tables (tables from other extension for exemple) that are needed for your extension (MySQL syntax).
It is possible to use LEFT JOIN ou INNER JOIN.</label>

			<label index="LLL:EXT:sav_library_kickstarter/Resources/Private/Language/locallang.xml:kickstarter.queriesItem.aliases.description">Define here the aliases associated with your query (MySQL syntax).</label>

			<label index="LLL:EXT:sav_library_kickstarter/Resources/Private/Language/locallang.xml:kickstarter.queriesItem.whereClause.description">Defines the WHERE clause for query. It can be:
. a conventional MySQL clause.
- The marker ###user### can be used. It will be replaced by the user uid.
- The marker ###uid### can be used. It will be replaced by the current uid record.
- The marker ###CURRENT_PID### can be used. It will be replaced by the current page uid.
- The marker ###STORAGE_PID### can be used. It will be replaced by the storage page uid.
. ###group_list = list_of_comma_separed_fe_groups###. To be used with a selector on fe_users. It checks if the user belongs to the group list. 
. ###group_list != list_of_comma_separed_fe_groups###. To be used with a selector on fe_users. It checks if the user does not belong to the group list. 
. ###func:WHERE_Clause####. func must be a valid method defined in the tx_savlibrary class. If the method returns true then the WHERE clause is added otherwise it is omitted. The method may have one parameter.
Existing methods are:
  - isInputMode which returns true the form is in the input mode,
  - isNotInputMode which returns true the form is not in the input mode,
  - isGroupMember(groupName) which returns true if the user is a member of "groupName",
  - isNotGroupMember(groupName) which returns true if the user is not a member of "groupName".

Other methods can be added using sav_library_extends.The WHERE_Clause can be any previous cases.</label>

			<label index="LLL:EXT:sav_library_kickstarter/Resources/Private/Language/locallang.xml:kickstarter.queriesItem.orderByClause.description">ORDER BY clause for the query (MySQL syntax).</label>

			<label index="LLL:EXT:sav_library_kickstarter/Resources/Private/Language/locallang.xml:kickstarter.queriesItem.groupByClause.description">GROUP BY clause for the query. Very useful when MM tables are used (MySQL syntax).</label>

			<label index="LLL:EXT:sav_library_kickstarter/Resources/Private/Language/locallang.xml:kickstarter.queriesItem.whereTags.description">WHERE tags are a special feature that makes it possible to use hyperlinks with a parameter &amp;where=tagname.
To add a new "WHERE Tag", click on the icon and fill the fields. The first field is name of the parameter you want to use (e.g. tagname) and the two others are respectively a WHERE clause and an ORDER BY clause. Example:
Name: myTag
WHERE Clause: myTable.myField &gt; 0
ORDER BY Clause: myTable.myField desc</label>

		</languageKey>
	</data>
</T3locallang>